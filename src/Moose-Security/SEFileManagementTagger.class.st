Class {
	#name : 'SEFileManagementTagger',
	#superclass : 'SEVulnerabilityTagger',
	#category : 'Moose-Security-Taggers',
	#package : 'Moose-Security',
	#tag : 'Taggers'
}

{ #category : 'default taggers' }
SEFileManagementTagger class >> addMethodNameTaggersTo: taggers [
	"This method is located in the Filer interface. This interface supports the creation of new files by an annotation processor. Files created in this way will be known to the annotation processing tool implementing this interface, better enabling the tool to manage them. Source and class files so created will be considered for processing by the tool in a subsequent round of processing after the close method has been called on the Writer or OutputStream used to write the contents of the file. Three kinds of files are distinguished: source files, class files, and auxiliary resource files."

	<cautionTagger>
	#( #createSourceFile #newBufferedReader #newBufferedWriter
	   #setOwner #writeString #write ) do: [ :methodName |
		taggers add: (self tagResultOf: [ :model :tagger |
				 tagger methodsNamed: methodName in: model ]) ]
]

{ #category : 'accessing' }
SEFileManagementTagger class >> tagColor [
	"Method generated by SEVulnerabilityTagger class>>#generateColorMethods"

	^ (Color r: 0.6999022482893451 g: 0.07038123167155426 b: 0.07038123167155426 alpha: 1.0)
]

{ #category : 'accessing' }
SEFileManagementTagger class >> tagName [

	^ #FileManagement
]
